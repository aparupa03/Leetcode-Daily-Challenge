//Convert Sorted List to Binary Search Tree
class Solution {
public:
    TreeNode* constructBST(ListNode* left, ListNode* right){
        if(left == right) return NULL;
        ListNode *slow = left, *fast = left;
        while(fast != right && fast->next != right){
            slow = slow->next; fast = fast->next->next;
        }
        TreeNode* root = new TreeNode(slow->val);
        root->left = constructBST(left, slow);
        root->right = constructBST(slow->next, right);
        return root;
    }
    
    TreeNode* sortedListToBST(ListNode* head) {
        if(head == NULL) return NULL;
        if(head->next == NULL){
            TreeNode* root = new TreeNode(head->val);
            return root;
        }
        return constructBST(head, NULL);
    }
};