//Capacity To Ship Packages Within D Days
class Solution {
public:
    bool feasible(vector<int>& weights, int c, int days){
        int daysneeded = 1, currentload = 0;
        for(int i = 0; i < weights.size(); i++){
            currentload += weights[i];
            if(currentload > c){
                daysneeded++;
                currentload = weights[i];
            }
        }
        return daysneeded <= days;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int sumofweights = 0;
        int maxweight = 0;
        for(int i = 0; i < weights.size(); i++){
            sumofweights += weights[i];
            maxweight = max(maxweight, weights[i]);
        }
        int l = maxweight, r = sumofweights;
        while(l < r){
            int mid = (l + r)/2;
            if(feasible(weights,mid,days)) r = mid;
            else l = mid + 1;
        }
        return l;
    }
};