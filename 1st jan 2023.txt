class Solution {
public:
    bool wordPattern(string pattern, string s) {
        map<char,string> match;
        map<string,char> match2;
        vector<string> words;
        s += " ";
        string temp = "";
        for(int i = 0; i < s.size(); i++){
            if(s[i] == ' '){
                words.push_back(temp);
                temp = "";
            }
            else
                temp += s[i];
        }
        if(pattern.size() != words.size())
            return false;
        for(int i = 0 ; i < pattern.size(); i++){
            if(match.find(pattern[i]) != match.end() && match[pattern[i]] != words[i]){
                return false;
            }
            else if(match2.find(words[i]) != match2.end() && match2[words[i]] != pattern[i])
                return false;
            match[pattern[i]] = words[i];
            match2[words[i]] = pattern[i];
        }
        return true;
    }
};