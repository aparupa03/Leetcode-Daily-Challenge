class Solution {
public:
    int minimumRounds(vector<int>& tasks) {
        if(tasks.size() < 2) return -1;
        sort(tasks.begin(), tasks.end());
        int s = tasks.size();
        vector<vector<int>> freqoftasks(s, vector<int> (2, 0));
        int temp = tasks[0];
        freqoftasks[0][0] = temp;
        freqoftasks[0][1] = 1;
        int index = 0;
        for(int i = 1; i < tasks.size(); i++){
            if(tasks[i] == temp){
                freqoftasks[index][1]++;
            }
            else{
                index++;
                temp = tasks[i];
                freqoftasks[index][0] = temp;
                freqoftasks[index][1] = 1;
            }
        }
        int minrounds = 0;
        for(int i = 0; i <= index; i++){
            if(freqoftasks[i][1] < 2)
                return -1;
            if(freqoftasks[i][1] == 2 || freqoftasks[i][1] == 3) 
                minrounds++;
            else if(freqoftasks[i][1] % 3 == 0)
                minrounds += (freqoftasks[i][1] / 3);
            else if((freqoftasks[i][1] % 3 == 1) || (freqoftasks[i][1] % 3 == 2))
                minrounds += (freqoftasks[i][1] / 3) + 1;
        }
        return minrounds;
    }
};